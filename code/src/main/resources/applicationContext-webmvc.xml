<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd   
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd   
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd   
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd  
	">

	<!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
	<!-- <mvc:interceptors> <mvc:interceptor> 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller 
		<mvc:mapping path="/*.json" /> 需排除拦截的地址 <mvc:exclude-mapping path="/login.json" 
		/> <mvc:exclude-mapping path="/register.json" /> <mvc:exclude-mapping path="/captcha.json" 
		/> <mvc:exclude-mapping path="/printstack.json" /> <bean class="itaf.core.security.SessionInterceptor" 
		/> </mvc:interceptor> </mvc:interceptors> -->
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->
			<mvc:mapping path="/*.json" />
			<mvc:exclude-mapping path="/captcha.json" />
			<bean class="itaf.core.web.CoreInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- <mvc:annotation-driven> <mvc:message-converters> <bean class="org.springframework.http.converter.StringHttpMessageConverter"> 
		<constructor-arg value="#{T(java.nio.charset.Charset).forName('UTF-8')}"/> 
		<property name="supportedMediaTypes"> <list> <value>text/plain;charset=UTF-8</value> 
		<value>text/html;charset=UTF-8</value> <value>applicaiton/javascript;charset=UTF-8</value> 
		</list> </property> <property name="writeAcceptCharset"><value>false</value></property> 
		</bean> <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"> 
		<property name="supportedMediaTypes"> <list> <value>application/json; charset=UTF-8</value> 
		<value>application/x-www-form-urlencoded; charset=UTF-8</value> </list> </property> 
		</bean> </mvc:message-converters> </mvc:annotation-driven> -->



</beans> 
	
